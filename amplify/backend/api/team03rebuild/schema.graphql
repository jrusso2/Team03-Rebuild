# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Driver @model {
  id: ID!
  name: String!
  sponsor: Sponsor @belongsTo
  points: Int!
  pointHistory: [PointHistory] @hasMany
  profile: DriverProfile @hasOne
  purchases: [Purchase] @hasMany
}

type Sponsor @model {
  id: ID!
  name: String!
  productCatalog: [Product] @hasMany
  drivers: [Driver] @hasMany
  pointConversionRate: Float! # Conversion rate from dollars to points
  sponsorUsers: [SponsorUser] @hasMany
  reports: [Report] @hasMany
}

type SponsorUser @model {
  id: ID!
  username: String!
  sponsor: Sponsor @belongsTo
  role: String! # Define roles within Sponsor (Admin, Manager, etc.)
}

type Product @model {
  id: ID!
  name: String!
  description: String!
  price: Float!
  pointsValue: Int! # Calculated based on pointConversionRate
  sponsor: Sponsor @belongsTo
}

type Purchase @model {
  id: ID!
  driver: Driver @belongsTo
  status: String! # (e.g., "Pending", "Completed", "Cancelled")
  purchaseDate: AWSDateTime!
}

type PointHistory @model {
  id: ID!
  driver: Driver @belongsTo
  date: AWSDateTime!
  pointsChange: Int!
  reason: String!
}

type Administrator @model {
  id: ID!
  username: String!
  profile: AdminProfile @hasOne
  reports: [Report] @hasMany
}

type AdminProfile @model {
  id: ID!
  administrator: Administrator @belongsTo
  contactEmail: String!
}

type DriverProfile @model {
  id: ID!
  driver: Driver @belongsTo
  contactEmail: String!
  applicationStatus: String! # (e.g., "Pending", "Accepted", "Rejected")
}

type Report @model {
  id: ID!
  type: String! # (e.g., "Driver Point Tracking", "Sales by Sponsor")
  generatedBy: Administrator @belongsTo
  sponsor: Sponsor @belongsTo
  dateRangeStart: AWSDateTime
  dateRangeEnd: AWSDateTime
  reportData: AWSJSON!
}

type AuditLog @model {
  id: ID!
  user: String!
  action: String! # (e.g., "Login", "Point Adjustment", "Profile Update")
  timestamp: AWSDateTime!
  details: AWSJSON
}